/* modelsHelper */

var modelsHelper = {}
var caches_Pool = {}

/**
 * Operator
 */

var Operator = function( name, handler ) {
	if (!name || !handler) throw 'error - !'
	this.name = name
	this.handler = handler
	return this
}

Operator.prototype = {
	name: '',
	handler: ''
}

/**
 * Operators
 */
 
var Operators = {}
Operators.map = []
Operators.bind = function( operators ) {
	for (var operator in operators) {
		if (!operator.name || !operator.handler) {
			console.log('type error')
			continue;
		}
		Operators.map[operator.name] = operator.handler
	}
}
Operators.unbind = function ( operators ) {
	for (var operator in operators) {
		delete Operators.map[operator.name]
	}
}

/**
 * Expose the method "modelsHelper.bind"
 */

modelsHelper.bind = function( operators ) {
	if (typeof operators !== 'object') throw 'arguments error'
	if (Object.prototype.toString.apply(operators) !== '[object Array]') {
		operators = [operators]
	}
	Operators.bind(operators);
}

/**
 * Startup
 */
 
modelsHelper.startup = function() {
	var operators = Operators.map
	for (var name in operators) {
		modelsHelper[name] = operators[name]
	}
}

/**
 * Database Support
 */

modelsHelper.isValided = null
modelsHelper.dbSupport = function( dbSupportName ) {
	var dbStatus = require('./supportDB/' + dbSupportName)
	if ( dbStatus.debug ) {
		modelsHelper.isValided = modelsHelper.debug = true
	} else {
		modelsHelper.isValided = true
	}
	
	return {
		use: function() {
			if (!modelsHelper.isValided) console.log('status in Model occurs an error')
			modelsHelper.startup()
		}
	}
}

modelsHelper.Operator = Operator
module.exports = modelsHelper

